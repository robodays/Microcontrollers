
8_Timer_counter 12.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         0000006c  00000000  00000000  00000054  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000000  00800060  00800060  000000c0  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .comment      00000030  00000000  00000000  000000c0  2**0
                  CONTENTS, READONLY
  3 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  000000f0  2**2
                  CONTENTS, READONLY
  4 .debug_aranges 00000020  00000000  00000000  0000012c  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   00000514  00000000  00000000  0000014c  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 000004a4  00000000  00000000  00000660  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   000001f1  00000000  00000000  00000b04  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  00000024  00000000  00000000  00000cf8  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    000002ae  00000000  00000000  00000d1c  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_ranges 00000010  00000000  00000000  00000fca  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	12 c0       	rjmp	.+36     	; 0x26 <__ctors_end>
   2:	19 c0       	rjmp	.+50     	; 0x36 <__bad_interrupt>
   4:	18 c0       	rjmp	.+48     	; 0x36 <__bad_interrupt>
   6:	17 c0       	rjmp	.+46     	; 0x36 <__bad_interrupt>
   8:	16 c0       	rjmp	.+44     	; 0x36 <__bad_interrupt>
   a:	15 c0       	rjmp	.+42     	; 0x36 <__bad_interrupt>
   c:	14 c0       	rjmp	.+40     	; 0x36 <__bad_interrupt>
   e:	13 c0       	rjmp	.+38     	; 0x36 <__bad_interrupt>
  10:	12 c0       	rjmp	.+36     	; 0x36 <__bad_interrupt>
  12:	11 c0       	rjmp	.+34     	; 0x36 <__bad_interrupt>
  14:	10 c0       	rjmp	.+32     	; 0x36 <__bad_interrupt>
  16:	0f c0       	rjmp	.+30     	; 0x36 <__bad_interrupt>
  18:	0e c0       	rjmp	.+28     	; 0x36 <__bad_interrupt>
  1a:	0d c0       	rjmp	.+26     	; 0x36 <__bad_interrupt>
  1c:	0c c0       	rjmp	.+24     	; 0x36 <__bad_interrupt>
  1e:	0b c0       	rjmp	.+22     	; 0x36 <__bad_interrupt>
  20:	0a c0       	rjmp	.+20     	; 0x36 <__bad_interrupt>
  22:	09 c0       	rjmp	.+18     	; 0x36 <__bad_interrupt>
  24:	08 c0       	rjmp	.+16     	; 0x36 <__bad_interrupt>

00000026 <__ctors_end>:
  26:	11 24       	eor	r1, r1
  28:	1f be       	out	0x3f, r1	; 63
  2a:	cf e5       	ldi	r28, 0x5F	; 95
  2c:	d4 e0       	ldi	r29, 0x04	; 4
  2e:	de bf       	out	0x3e, r29	; 62
  30:	cd bf       	out	0x3d, r28	; 61
  32:	02 d0       	rcall	.+4      	; 0x38 <main>
  34:	19 c0       	rjmp	.+50     	; 0x68 <_exit>

00000036 <__bad_interrupt>:
  36:	e4 cf       	rjmp	.-56     	; 0x0 <__vectors>

00000038 <main>:
#include <avr/io.h>


int main(void)
{
	DDRD = 0b11111111;
  38:	8f ef       	ldi	r24, 0xFF	; 255
  3a:	81 bb       	out	0x11, r24	; 17
	PORTD = 0b00000000;
  3c:	12 ba       	out	0x12, r1	; 18
	
	TCCR1B = 0b00000011;
  3e:	83 e0       	ldi	r24, 0x03	; 3
  40:	8e bd       	out	0x2e, r24	; 46
	// TCCR2
	//TCCR2 = 0b00000111;
	//TCNT2 = 0;
	
//	TCNT1 = 0;
	TCNT1H = 0;
  42:	1d bc       	out	0x2d, r1	; 45
	TCNT1L = 0;
  44:	1c bc       	out	0x2c, r1	; 44
		}
		*/
		 
		// or so
		
		if (TCNT1L == 0 && TCNT1H == 0) {
  46:	8c b5       	in	r24, 0x2c	; 44
  48:	81 11       	cpse	r24, r1
  4a:	05 c0       	rjmp	.+10     	; 0x56 <__SREG__+0x17>
  4c:	8d b5       	in	r24, 0x2d	; 45
  4e:	81 11       	cpse	r24, r1
  50:	02 c0       	rjmp	.+4      	; 0x56 <__SREG__+0x17>
			PORTD = 0b00000111;
  52:	87 e0       	ldi	r24, 0x07	; 7
  54:	82 bb       	out	0x12, r24	; 18
		}
		//if (TCNT1L == 0 && TCNT1H == 128) {
		//	PORTD = 0b11111111;
		//}
		// or so
		if (TCNT1L == 0x00 && TCNT1H == 0b10000000) {
  56:	8c b5       	in	r24, 0x2c	; 44
  58:	81 11       	cpse	r24, r1
  5a:	f5 cf       	rjmp	.-22     	; 0x46 <__SREG__+0x7>
  5c:	8d b5       	in	r24, 0x2d	; 45
  5e:	80 38       	cpi	r24, 0x80	; 128
  60:	91 f7       	brne	.-28     	; 0x46 <__SREG__+0x7>
			PORTD = 0b11111111;
  62:	8f ef       	ldi	r24, 0xFF	; 255
  64:	82 bb       	out	0x12, r24	; 18
  66:	ef cf       	rjmp	.-34     	; 0x46 <__SREG__+0x7>

00000068 <_exit>:
  68:	f8 94       	cli

0000006a <__stop_program>:
  6a:	ff cf       	rjmp	.-2      	; 0x6a <__stop_program>
